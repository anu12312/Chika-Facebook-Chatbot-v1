const axios = require('axios');
const log = require('npmlog');
const { checkApikey } = require('./utils');
class Shoti {
   constructor(api_key) {
      this.api_key = api_key;
   }
   createRequest(obj) {
   	return new Promise(async (resolve, reject) => {
   	let isValidApikey = await checkApikey(this.api_key);
   	if(!isValidApikey) {
   	   log.error("Apikey", "Invalid apikey");
       } else {
   	if(obj.method == "get-shoti") {
   	    let data = {
   	       apikey: this.api_key
           }
   	    axios.post('https://shoti-api.libyzxy0.repl.co/api/get-shoti', data)
           .then(response => {
           	resolve(response.data);
            })
           .catch(err => {
           	log.error("Shoti", err.response.data);
           })
       } else if (obj.method == "add-shoti") {
       	if(!obj.url) {
       	   log.error("Shoti", "Undefined url");
           } else {
       	let data = {
   	       apikey: this.api_key, 
              url: obj.url
           }
   	    axios.post('https://shoti-api.libyzxy0.repl.co/api/add-shoti', data)
           .then(response => {
           	resolve(response.data);
            })
           .catch(err => {
           	log.error("Shoti", err.response.data);
           }) 
           }
       } else {
       	log.error("Shoti", "Invalid method");
       }
       }
       })
   }
}

module.exports = Shoti;